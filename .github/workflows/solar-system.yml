name: Solar System Workflow
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        version: [18, 19]
        os: [ubuntu-latest]
        exclude:
          - version: 18
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version ${{ matrix.version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.version }}

      - name: Cache NPM Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm test

      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Result-${{ matrix.os }}-node${{ matrix.version }}
          path: test-results.xml

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache NPM Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        run: npm install

      - name: Run Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Code Coverage Result
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

  docker-build-test:
    name: Docker Build, Test 
    runs-on: ubuntu-latest
    needs: [unit-testing, code-coverage]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

      - name: Test Docker Image
        run: |
          docker run --name solar-system-app -d -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
          echo "Waiting for container to start..."
          sleep 15
          wget -q -O - 127.0.0.1:3000/live | grep live

      - name: Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
          load: false

  deploy-to-azure:
    name: Deploy to Azure Web App
    runs-on: ubuntu-latest
    needs: docker-build-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: APP-SERVICE                     # Replace with your Azure Web App name
          publish-profile: ${{ secrets.DOWNLOADED_PROFILE}}
          images: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
          slot-name: production
